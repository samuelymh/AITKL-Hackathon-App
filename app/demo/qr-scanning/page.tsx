"use client";

import { ProviderDashboard } from "@/components/provider-dashboard";
import { TestQRGenerator } from "@/components/test-qr-generator";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { QrCode, UserCheck, AlertTriangle } from "lucide-react";

export default function QRScanningDemoPage() {
  // Mock data for demo
  const mockOrganizationId = "org_demo_hospital_001";
  const mockUserId = "user_dr_jane_smith_001";
  const mockUserName = "Dr. Jane Smith";

  return (
    <div className="min-h-screen bg-background">
      <div className="container mx-auto py-8 px-4 space-y-8">
        {/* Demo Header */}
        <Card>
          <CardHeader className="text-center">
            <CardTitle className="flex items-center justify-center gap-2 text-2xl">
              <QrCode className="h-6 w-6" />
              QR Scanning & Authorization Demo
            </CardTitle>
            <CardDescription className="max-w-2xl mx-auto">
              This demo showcases the QR code scanning and authorization request flow for healthcare providers. Use the
              QR generator below to create test QR codes, then scan them with the provider dashboard.
            </CardDescription>
            <div className="flex justify-center gap-2 mt-4">
              <Badge variant="outline" className="bg-blue-50 border-blue-200 text-blue-800">
                Next.js 15
              </Badge>
              <Badge variant="outline" className="bg-green-50 border-green-200 text-green-800">
                React QR Scanner
              </Badge>
              <Badge variant="outline" className="bg-purple-50 border-purple-200 text-purple-800">
                Tailwind CSS
              </Badge>
            </div>
          </CardHeader>
        </Card>

        {/* Important Notice */}
        <Card className="border-yellow-200 bg-yellow-50">
          <CardContent className="pt-6">
            <div className="flex items-start gap-3">
              <AlertTriangle className="h-5 w-5 text-yellow-600 mt-0.5 flex-shrink-0" />
              <div className="space-y-2">
                <h3 className="font-semibold text-yellow-800">Demo Environment Notice</h3>
                <p className="text-sm text-yellow-700">
                  This is a demonstration of the QR scanning flow. In a production environment, patient QR codes would
                  be generated by the actual patient mobile app, and the authorization requests would trigger real
                  notifications to patients.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Demo Instructions */}
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">How to Test the QR Scanning Flow</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="space-y-2">
                <div className="w-8 h-8 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-sm font-bold">
                  1
                </div>
                <h4 className="font-medium">Generate Test QR</h4>
                <p className="text-sm text-muted-foreground">
                  Use the QR generator below to create a mock patient QR code with test data.
                </p>
              </div>

              <div className="space-y-2">
                <div className="w-8 h-8 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-sm font-bold">
                  2
                </div>
                <h4 className="font-medium">Scan with Provider Dashboard</h4>
                <p className="text-sm text-muted-foreground">
                  Use the provider dashboard to scan the QR code and extract patient identifier.
                </p>
              </div>

              <div className="space-y-2">
                <div className="w-8 h-8 rounded-full bg-primary text-primary-foreground flex items-center justify-center text-sm font-bold">
                  3
                </div>
                <h4 className="font-medium">Create Authorization Request</h4>
                <p className="text-sm text-muted-foreground">
                  Fill out the authorization request form and submit it to the backend API.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>

        <div className="grid grid-cols-1 xl:grid-cols-3 gap-8">
          {/* QR Generator - Left Column */}
          <div className="xl:col-span-1 space-y-6">
            <div className="sticky top-4">
              <Card>
                <CardHeader className="pb-3">
                  <CardTitle className="flex items-center gap-2 text-lg">
                    <QrCode className="h-5 w-5" />
                    Step 1: Generate Test QR
                  </CardTitle>
                  <CardDescription>Create mock patient QR codes for testing</CardDescription>
                </CardHeader>
              </Card>
              <div className="mt-4">
                <TestQRGenerator />
              </div>
            </div>
          </div>

          {/* Provider Dashboard - Right Columns */}
          <div className="xl:col-span-2">
            <Card className="mb-4">
              <CardHeader className="pb-3">
                <CardTitle className="flex items-center gap-2 text-lg">
                  <UserCheck className="h-5 w-5" />
                  Step 2 & 3: Provider Workflow
                </CardTitle>
                <CardDescription>Scan QR codes and create authorization requests</CardDescription>
              </CardHeader>
            </Card>

            <ProviderDashboard organizationId={mockOrganizationId} userId={mockUserId} userName={mockUserName} />
          </div>
        </div>

        {/* Technical Details */}
        <Card>
          <CardHeader>
            <CardTitle className="text-lg">Technical Implementation Details</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              <div className="space-y-3">
                <h4 className="font-semibold">QR Code Structure</h4>
                <div className="text-sm text-muted-foreground space-y-1">
                  <p>
                    <strong>Type:</strong> health_access_request
                  </p>
                  <p>
                    <strong>Digital Identifier:</strong> Unique patient ID
                  </p>
                  <p>
                    <strong>Issued At:</strong> Timestamp of QR generation
                  </p>
                  <p>
                    <strong>Expires At:</strong> Optional expiry timestamp
                  </p>
                  <p>
                    <strong>Version:</strong> QR format version (1.0)
                  </p>
                </div>
              </div>

              <div className="space-y-3">
                <h4 className="font-semibold">API Endpoints Used</h4>
                <div className="text-sm text-muted-foreground space-y-1">
                  <p>
                    <code>GET /api/patient/qr</code> - Generate patient QR
                  </p>
                  <p>
                    <code>POST /api/v1/authorizations/request</code> - Create request
                  </p>
                  <p>
                    <strong>Libraries:</strong> @yudiel/react-qr-scanner
                  </p>
                  <p>
                    <strong>Security:</strong> JWT access tokens, field encryption
                  </p>
                </div>
              </div>
            </div>

            <Separator />

            <div className="text-xs text-muted-foreground">
              <p>
                <strong>Next Steps:</strong> This flow represents the provider-side QR scanning implementation. The next
                phase would include the patient-side authorization approval interface, real-time notifications, and the
                actual health record access system.
              </p>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
